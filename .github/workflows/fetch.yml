name: Update ds.png (merge with my source, final stable)

on:
  schedule:
    - cron: '0 0 * * *'   # 每天 UTC 00:00
  workflow_dispatch:      # 支持手动触发

permissions:
  contents: write

jobs:
  fetch-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare directories
        run: |
          mkdir -p an/backups

      - name: Download big source (non-fatal)
        shell: bash
        run: |
          TMP="an/fy.tmp"
          URL="https://fy.188766.xyz/all.xml.gz"
          echo "Downloading $URL ..."
          curl -fsSL --retry 2 "$URL" -o "$TMP" || TMP=""
          if [ -n "$TMP" ]; then
            HEAD=$(head -n 1 "$TMP" 2>/dev/null)
            if [[ ! "$HEAD" =~ ^\#EXTM3U|^\<\?xml|^\<tv ]]; then
              echo "Downloaded file header invalid — skipping update."
              TMP=""
            fi
          fi

      - name: Merge with my source
        shell: bash
        run: |
          set +e
          OUT="an/ds.png"
          MY_SRC="an/ds.png"
          BACKUP_DIR="an/backups"

          # 第一次备份
          if [ ! -f "${BACKUP_DIR}/ds.png.first.bak" ] && [ -f "$OUT" ]; then
            cp "$OUT" "${BACKUP_DIR}/ds.png.first.bak"
            echo "First backup created: ${BACKUP_DIR}/ds.png.first.bak"
          fi

          if [ -z "$TMP" ]; then
            echo "No big source downloaded — skipping merge."
            exit 0
          fi

          MERGED="an/ds.tmp"
          > "$MERGED"

          # 将你自己的源存到临时文件里：格式 id|URL
          MY_TEMP="an/my_source.tmp"
          > "$MY_TEMP"
          if [ -f "$MY_SRC" ]; then
            while read -r url; do
              id=$(echo "$url" | sed -n 's/.*id=\([^&]*\).*/\1/p')
              if [ -n "$id" ]; then
                echo "$id|$url" >> "$MY_TEMP"
              fi
            done < <(grep -E '^https?://' "$MY_SRC") || true
          fi

          # 遍历大佬源并合并
          while IFS= read -r line; do
            echo "$line" >> "$MERGED"
            id=$(echo "$line" | sed -n 's/.*id=\([^&]*\).*/\1/p')
            if [ -n "$id" ]; then
              # 查找你源是否有相同 id
              match=$(grep "^$id|" "$MY_TEMP" | cut -d'|' -f2-)
              if [ -n "$match" ]; then
                echo "$match" >> "$MERGED"
              fi
            fi
          done < "$TMP"

          mv "$MERGED" "$OUT"
          echo "Merged file saved to $OUT"

      - name: Commit & push
        shell: bash
        run: |
          set +e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add an/ds.png an/backups
          git diff --cached --quiet
          if [ $? -ne 0 ]; then
            git commit -m "Auto-update ds.png (merge my source)"
            git push || echo "Push failed."
          else
            echo "No changes to commit."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
